package com.junit.assertions.examples;

import static org.junit.Assert.*;

import org.junit.Test;

public class JunitAssertionsExample {

	@Test
	public void testAssertions() {
		// test data
		String str1 = new String("abc");
		String str2 = new String("abc");
		String str3 = null;
		String str4 = "abc";
		String str5 = "abc";
		int val1 = 5;
		int val2 = 6;
		String[] expectedArray = { "one", "two", "three" };
		String[] resultArray = { "one", "two", "three" };

		// Check that two objects are equal
		assertEquals(str1, str2);
		System.out.println("Two Objects are equal----------" + "str1 value is--------" + str1 + "-------------"
				+ "str2 value is-----------" + str2);

		// Check that a condition is true
		assertTrue(val1 < val2);
		System.out.println("Condition is true---------" + "val1 is--------" + val1 + "----------"
				+ "val2 value is-----------" + val2);
		// Check that a condition is false
		assertFalse(val1 > val2);
		System.out.println(
				"Condition is false-------" + "val1 is--------" + val1 + "-----" + "val2 value is-----------" + val2);

		// Check that an object isn't null
		assertNotNull(str1);
		System.out.println("Object is not Null--------" + "str1 value is--------" + str1);
		// Check that an object is null
		assertNull(str3);
		System.out.println("Object is Null---------" + "str3 value is--------" + str3);

		// Check if two object references point to the same object
		assertSame(str4, str5);
		System.out.println("object references point to the same object------" + "str4 value is--------" + str4
				+ "-----------" + "str5 value is----" + str5);

		// Check if two object references not point to the same object
		assertNotSame(str1, str3);
		System.out.println("object references does not point to the same object-----" + "str1 value is--------" + str1
				+ "------" + "str3 value is----" + str3);

		// Check whether two arrays are equal to each other.
		assertArrayEquals(expectedArray, resultArray);
		System.out.println("Arrays are equal");
	}
}
